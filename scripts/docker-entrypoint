#!/bin/bash

set -o errexit
set -o pipefail
set -o nounset

# Fetch secrets from AWS Secrets Manager if not running locally
if [ "$IS_LOCAL" != "true" ]; then
    eval "$(python /app/scripts/fetch_secrets.py)"
fi


# Wait for PostgreSQL
wait-for-it "${DB_HOST}:${DB_PORT}" -t 30
>&2 echo 'PostgreSQL is available'

# Run Django migrations
python manage.py migrate


TEST_MODE=${TEST_MODE:-false}
if [ "$TEST_MODE" = "true" ]; then
    echo "Test mode enabled, skipping server startup"
    exit 0
fi
# Start the appropriate server based on environment
if [ "$IS_LOCAL" = "true" ]; then
    python manage.py createsu
    exec python manage.py runserver_plus 0.0.0.0:8000
else
    python manage.py createsu
    python manage.py collectstatic --noinput
    exec /usr/local/bin/gunicorn config.wsgi \
        --bind 0.0.0.0:5000 \
        --chdir=/app \
        --workers 3 \
        --threads 2 \
        --worker-class gevent \
        --worker-connections 1000 \
        --max-requests 1000 \
        --max-requests-jitter 50 \
        --timeout 60 \
        --keep-alive 5
fi
