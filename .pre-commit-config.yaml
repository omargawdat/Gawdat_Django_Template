exclude: '^docs/|/migrations/|^devcontainer.json$|.*\.tmp$|^uv\.lock$'
default_stages: [ pre-commit ]

default_language_version:
  python: python3.13

repos:
  # General pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: check-added-large-files
        args: [ --maxkb=500 ]
      - id: check-toml
      - id: check-yaml
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-json
      - id: check-xml
      - id: debug-statements
      - id: check-builtin-literals
      - id: check-docstring-first
      - id: detect-private-key
  #      - id: no-commit-to-branch
  #        args: [ --branch, 'main' ]

  # API validation
  - repo: https://github.com/python-openapi/openapi-spec-validator
    rev: 0.8.0b1
    hooks:
      - id: openapi-spec-validator  # OpenAPI Spec Validation

  # Security checks
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        exclude: dummy.env|README.md

  #  - repo: https://github.com/semgrep/semgrep
  #    rev: v1.89.0
  #    hooks:
  #      - id: semgrep
  #        args: [ --config=auto ]

  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.28.0
    hooks:
      - id: gitleaks
        exclude: README.md

  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.6
    hooks:
      - id: bandit
        args: [
          '-s', 'B101,B602,B404,B603,B607',  # Skip multiple checks
          '-ll',  # Only report high and medium severity issues
        ]

  # Django tools
  - repo: https://github.com/adamchainz/django-upgrade
    rev: '1.28.0'
    hooks:
      - id: django-upgrade
        args: [ '--target-version', '5.2' ]

  # - repo: https://github.com/Riverside-Healthcare/djLint
  #   rev: v1.36.4
  #   hooks:
  #     - id: djlint-reformat-django
  #     - id: djlint-django  # Django template linting

  # Commit message validation
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v4.9.1
    hooks:
      - id: commitizen
        stages: [ commit-msg ]

  # Additional linters (non-Python)
  - repo: https://github.com/koalaman/shellcheck-precommit
    rev: v0.11.0
    hooks:
      - id: shellcheck

  #  - repo: https://github.com/adrienverge/yamllint
  #    rev: v1.37.1
  #    hooks:
  #      - id: yamllint

  # Local hooks
  - repo: local
    hooks:
      # Python linting and formatting (using uv tool run for automatic installation).
      - id: ruff-check
        name: ruff check
        entry: uv tool run ruff check --fix .
        language: system
        require_serial: true
        pass_filenames: false
        always_run: true

      - id: ruff-format
        name: ruff format
        entry: uv tool run ruff format
        language: system
        require_serial: true
        pass_filenames: false
        always_run: true

      # - id: mypy
      #   name: mypy
      #   entry: uv tool run mypy
      #   language: system
      #   types: [python]
      #   require_serial: true
      #   pass_filenames: false

      # UV lockfile validation
      - id: uv-lock-check
        name: uv lock check (prevent lockfile drift)
        entry: uv lock --check
        language: system
        pass_filenames: false
        files: (pyproject\.toml|uv\.lock)$

      # Security scanning
      - id: pip-audit
        name: pip-audit (vulnerability scanning)
        entry: bash -c 'uv tool run pip-audit <(uv export --no-hashes)'
        language: system
        pass_filenames: false
        stages: [manual, pre-push]

      # Django-specific checks
      - id: check-branch-up-to-date
        name: Check branch is up to date with origin/main
        entry: bash -c 'git fetch origin main && git merge-base --is-ancestor origin/main HEAD || (echo "Branch is behind origin/main. Please rebase or merge first." && exit 1)'
        language: system
        pass_filenames: false
        stages: [ pre-push ]
      - id: django-makemigrations-check
        name: Check Django migrations
        entry: docker compose -f docker-compose.local.yml run --rm -T django python manage.py makemigrations --dry-run --check
        language: system
        pass_filenames: false
        files: ^.+\.(py)$
        stages: [ pre-push ]
      - id: pytest
        name: Run pytest tests
        entry: docker compose -f docker-compose.local.yml run --rm -T django pytest
        language: system
        pass_filenames: false
        stages: [ pre-push ]

      - id: auto-update-hooks
        name: Auto-update pre-commit hooks
        entry: pre-commit autoupdate
        language: system
        stages: [ manual ]

ci:
  autoupdate_schedule: weekly
  fail_fast: true
  skip: [ ]
  submodules: false
