# Generated by Django 5.2.5 on 2025-09-18 17:05

import djmoney.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('location', '0004_alter_country_app_install_money_invitee_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='country',
            name='app_install_money_invitee_currency',
            field=djmoney.models.fields.CurrencyField(choices=[('BHD', 'Bahraini Dinar'), ('EGP', 'Egyptian Pound'), ('KWD', 'Kuwaiti Dinar'), ('OMR', 'Omani Rial'), ('QAR', 'Qatari Riyal'), ('SAR', 'Saudi Riyal'), ('AED', 'United Arab Emirates Dirham')], default=None, editable=False, max_length=3),
        ),
        migrations.AddField(
            model_name='country',
            name='app_install_money_inviter_currency',
            field=djmoney.models.fields.CurrencyField(choices=[('BHD', 'Bahraini Dinar'), ('EGP', 'Egyptian Pound'), ('KWD', 'Kuwaiti Dinar'), ('OMR', 'Omani Rial'), ('QAR', 'Qatari Riyal'), ('SAR', 'Saudi Riyal'), ('AED', 'United Arab Emirates Dirham')], default=None, editable=False, max_length=3),
        ),
        migrations.AddField(
            model_name='country',
            name='order_money_invitee_currency',
            field=djmoney.models.fields.CurrencyField(choices=[('BHD', 'Bahraini Dinar'), ('EGP', 'Egyptian Pound'), ('KWD', 'Kuwaiti Dinar'), ('OMR', 'Omani Rial'), ('QAR', 'Qatari Riyal'), ('SAR', 'Saudi Riyal'), ('AED', 'United Arab Emirates Dirham')], default=None, editable=False, max_length=3),
        ),
        migrations.AddField(
            model_name='country',
            name='order_money_inviter_currency',
            field=djmoney.models.fields.CurrencyField(choices=[('BHD', 'Bahraini Dinar'), ('EGP', 'Egyptian Pound'), ('KWD', 'Kuwaiti Dinar'), ('OMR', 'Omani Rial'), ('QAR', 'Qatari Riyal'), ('SAR', 'Saudi Riyal'), ('AED', 'United Arab Emirates Dirham')], default=None, editable=False, max_length=3),
        ),
        migrations.AlterField(
            model_name='country',
            name='app_install_money_invitee',
            field=djmoney.models.fields.MoneyField(decimal_places=2, help_text='Money awarded to invitee when they install the app.', max_digits=14, verbose_name='App Install Money - Invitee'),
        ),
        migrations.AlterField(
            model_name='country',
            name='app_install_money_inviter',
            field=djmoney.models.fields.MoneyField(decimal_places=2, help_text='Money awarded to inviter when invitee installs the app.', max_digits=14, verbose_name='App Install Money - Inviter'),
        ),
        migrations.AlterField(
            model_name='country',
            name='order_money_invitee',
            field=djmoney.models.fields.MoneyField(decimal_places=2, help_text='Money awarded to invitee when they place first order.', max_digits=14, verbose_name='Order Money - Invitee'),
        ),
        migrations.AlterField(
            model_name='country',
            name='order_money_inviter',
            field=djmoney.models.fields.MoneyField(decimal_places=2, help_text='Money awarded to inviter when invitee places first order.', max_digits=14, verbose_name='Order Money - Inviter'),
        ),
        migrations.AddConstraint(
            model_name='country',
            constraint=models.CheckConstraint(condition=models.Q(('app_install_money_inviter_currency', models.F('currency'))), name='app_install_money_inviter_currency_consistency', violation_error_message='App install money inviter currency must match country currency.'),
        ),
        migrations.AddConstraint(
            model_name='country',
            constraint=models.CheckConstraint(condition=models.Q(('app_install_money_invitee_currency', models.F('currency'))), name='app_install_money_invitee_currency_consistency', violation_error_message='App install money invitee currency must match country currency.'),
        ),
        migrations.AddConstraint(
            model_name='country',
            constraint=models.CheckConstraint(condition=models.Q(('order_money_inviter_currency', models.F('currency'))), name='order_money_inviter_currency_consistency', violation_error_message='Order money inviter currency must match country currency.'),
        ),
        migrations.AddConstraint(
            model_name='country',
            constraint=models.CheckConstraint(condition=models.Q(('order_money_invitee_currency', models.F('currency'))), name='order_money_invitee_currency_consistency', violation_error_message='Order money invitee currency must match country currency.'),
        ),
    ]
