# Generated by Django 5.2.5 on 2025-10-04 20:14

import django.db.models.deletion
import django.utils.timezone
import imagekit.models.fields
import phonenumber_field.modelfields
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('location', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=30, unique=True)),
                ('email', models.EmailField(blank=True, default='', max_length=254, verbose_name='Email')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('language', models.CharField(choices=[('en', 'English'), ('ar', 'Arabic')], default='ar', max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='AdminUser',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('image', imagekit.models.fields.ProcessedImageField(null=True, upload_to='users/', verbose_name='Image')),
                ('can_access_money', models.BooleanField(default=False, help_text='Allow this user to access money like process wallet money', verbose_name='Can access money')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('users.user',),
        ),
        migrations.CreateModel(
            name='HistoricalCustomer',
            fields=[
                ('user_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(db_index=True, max_length=30)),
                ('email', models.EmailField(blank=True, default='', max_length=254, verbose_name='Email')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('language', models.CharField(choices=[('en', 'English'), ('ar', 'Arabic')], default='ar', max_length=10)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, db_index=True, help_text='Should start with country code as (+966)', max_length=128, null=True, region=None, verbose_name='Phone Number')),
                ('image', models.TextField(blank=True, max_length=100, null=True, verbose_name='Image')),
                ('full_name', models.CharField(blank=True, default='', max_length=255, verbose_name='Full Name')),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('not_selected', 'Not Selected')], default='not_selected', max_length=20, verbose_name='Gender')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Birth Date')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Is Verified')),
                ('inviter', models.PositiveIntegerField(blank=True, db_index=True, null=True, verbose_name='Referral Customer ID')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('country', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='location.country', verbose_name='Country')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('polymorphic_ctype', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('primary_address', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='location.address', verbose_name='Primary Address')),
            ],
            options={
                'verbose_name': 'historical customer',
                'verbose_name_plural': 'historical customers',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text='Should start with country code as (+966)', max_length=128, null=True, region=None, unique=True, verbose_name='Phone Number')),
                ('image', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to='users/', verbose_name='Image')),
                ('full_name', models.CharField(blank=True, default='', max_length=255, verbose_name='Full Name')),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('not_selected', 'Not Selected')], default='not_selected', max_length=20, verbose_name='Gender')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Birth Date')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Is Verified')),
                ('inviter', models.PositiveIntegerField(blank=True, db_index=True, null=True, verbose_name='Referral Customer ID')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='users', to='location.country', verbose_name='Country')),
                ('primary_address', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='location.address', verbose_name='Primary Address')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('users.user',),
        ),
    ]
