name: Manual Cleanup

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'Pull Request Number'
        required: true
        type: string

jobs:
  cleanup:
    name: Cleanup Resources
    runs-on: ubuntu-latest
    env:
      PR_NUMBER: ${{ github.event.inputs.pr_number }}
      DB_NAME: pr_${{ github.event.inputs.pr_number }}_appdb
    steps:
      - name: Configure AWS Access
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION_NAME }}
      - name: Remove App Runner Service
        run: |
          SERVICE_NAME="pr-${{ env.PR_NUMBER }}-service"
          SERVICE_ARN=$(aws apprunner list-services \
            --query "ServiceSummaryList[?ServiceName=='${SERVICE_NAME}'].ServiceArn" \
            --output text)

          if [ -n "$SERVICE_ARN" ]; then
            aws apprunner delete-service --service-arn $SERVICE_ARN
            aws apprunner wait service-deleted --service-arn $SERVICE_ARN
            echo "âœ… Successfully removed service: ${SERVICE_NAME}"
          else
            echo "No service found for ${SERVICE_NAME}"
          fi
      - name: Drop Test Database
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
          PGPASSWORD=${{ secrets.DB_PASSWORD }} psql -h ${{ secrets.DB_HOST }} -p ${{ secrets.DB_PORT }} -U ${{ secrets.DB_USER }} -c "DROP DATABASE IF EXISTS ${{ env.DB_NAME }};"
          echo "Database ${{ env.DB_NAME }} successfully dropped."
