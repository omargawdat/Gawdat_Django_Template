name: PR Build Check
on:
  pull_request:
    branches: [ 'master', 'main' ]
    paths-ignore: [ 'docs/**' ]
  workflow_dispatch:  # <-- Allows manual trigger from GitHub UI

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Run pre-commit
        uses: pre-commit/action@v3.0.1

  test:
    runs-on: ubuntu-latest
    env:
      PR_NUMBER: ${{ github.event.number }}
      DOMAIN_NAME: pr-${{ github.event.number }}.gawdat.eramapps.com
      S3_BUCKET_NAME: pr-${{ github.event.number }}-gawdat
      DB_NAME: pr_${{ github.event.number }}_appdb
      IS_LOCAL: "false"

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Build Docker Image
        run: docker build --build-arg is_local=false -t app .

      - name: Run Tests Pipeline
        run: |
          docker run --rm \
            -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            -e AWS_REGION_NAME=${{ secrets.AWS_REGION_NAME }} \
            -e AWS_SECRET_MANAGER_NAME=${{ secrets.AWS_SECRET_MANAGER_NAME }} \
            -e DOMAIN_NAME=${DOMAIN_NAME} \
            -e S3_BUCKET_NAME=${S3_BUCKET_NAME} \
            -e DB_HOST=${{ secrets.DB_HOST }} \
            -e DB_PORT=${{ secrets.DB_PORT }} \
            -e DB_NAME=${DB_NAME} \
            -e DB_USER=${{ secrets.DB_USER }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e IS_LOCAL=${IS_LOCAL} \
            app /bin/bash -c "set -e && \
              echo '→ Checking migrations...' && \
              python manage.py makemigrations --check && \
              echo '→ Running migrations...' && \
              python manage.py migrate && \
              echo '→ Running tests...' && \
              pytest && \
              echo '✓ All tests completed successfully'"
